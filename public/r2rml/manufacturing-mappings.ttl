@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix mfg: <http://example.org/manufacturing#> .
@prefix ex: <http://example.org/> .

# R2RML Mapping for Manufacturing Database to RDF
# This mapping transforms relational database tables into RDF triples
# based on the manufacturing ontology

#################################
# Machine Table Mapping
#################################

<#MachineMapping>
    rr:logicalTable [ rr:tableName "Machine" ];
    rr:subjectMap [
        rr:template "http://example.org/machine/{MachineID}";
        rr:class mfg:Machine;
    ];
    
    # Machine ID property
    rr:predicateObjectMap [
        rr:predicate mfg:machineID;
        rr:objectMap [ rr:column "MachineID"; rr:datatype xsd:string ]
    ];
    
    # Machine Type property
    rr:predicateObjectMap [
        rr:predicate mfg:machineType;
        rr:objectMap [ rr:column "Type"; rr:datatype xsd:string ]
    ];
    
    # Location Name property
    rr:predicateObjectMap [
        rr:predicate mfg:locationName;
        rr:objectMap [ rr:column "Location"; rr:datatype xsd:string ]
    ];
    
    # Install Date property
    rr:predicateObjectMap [
        rr:predicate mfg:installDate;
        rr:objectMap [ rr:column "InstallDate"; rr:datatype xsd:date ]
    ];
    
    # RDFS Label for human readability
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ 
            rr:template "Machine {MachineID} ({Type})";
            rr:datatype xsd:string 
        ]
    ].

#################################
# Production Table Mapping
#################################

<#ProductionMapping>
    rr:logicalTable [ rr:tableName "Production" ];
    rr:subjectMap [
        rr:template "http://example.org/production/{ProductionID}";
        rr:class mfg:ProductionRun;
    ];
    
    # Production ID property
    rr:predicateObjectMap [
        rr:predicate mfg:productionID;
        rr:objectMap [ rr:column "ProductionID"; rr:datatype xsd:string ]
    ];
    
    # Timestamp property
    rr:predicateObjectMap [
        rr:predicate mfg:timestamp;
        rr:objectMap [ rr:column "Timestamp"; rr:datatype xsd:dateTime ]
    ];
    
    # Output Quantity property
    rr:predicateObjectMap [
        rr:predicate mfg:outputQuantity;
        rr:objectMap [ rr:column "Output_Quantity"; rr:datatype xsd:integer ]
    ];
    
    # Relationship to Machine (producedBy)
    rr:predicateObjectMap [
        rr:predicate mfg:producedBy;
        rr:objectMap [ 
            rr:template "http://example.org/machine/{MachineID}";
            rr:termType rr:IRI 
        ]
    ];
    
    # RDFS Label for human readability
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ 
            rr:template "Production Run {ProductionID} on {Timestamp}";
            rr:datatype xsd:string 
        ]
    ].

#################################
# Quality Measurement Mapping
# (Derived from Production table Quality_Score column)
#################################

<#QualityMeasurementMapping>
    rr:logicalTable [ rr:tableName "Production" ];
    rr:subjectMap [
        rr:template "http://example.org/quality/{ProductionID}";
        rr:class mfg:QualityMeasurement;
    ];
    
    # Quality Score property
    rr:predicateObjectMap [
        rr:predicate mfg:qualityScore;
        rr:objectMap [ rr:column "Quality_Score"; rr:datatype xsd:decimal ]
    ];
    
    # Inspection Date (using production timestamp)
    rr:predicateObjectMap [
        rr:predicate mfg:inspectionDate;
        rr:objectMap [ rr:column "Timestamp"; rr:datatype xsd:dateTime ]
    ];
    
    # RDFS Label for human readability
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ 
            rr:template "Quality Measurement for Production {ProductionID} (Score: {Quality_Score})";
            rr:datatype xsd:string 
        ]
    ].

#################################
# Relationship Mapping: Production to Quality
#################################

<#ProductionQualityRelationship>
    rr:logicalTable [ rr:tableName "Production" ];
    rr:subjectMap [
        rr:template "http://example.org/production/{ProductionID}";
    ];
    
    # hasQualityMeasurement relationship
    rr:predicateObjectMap [
        rr:predicate mfg:hasQualityMeasurement;
        rr:objectMap [ 
            rr:template "http://example.org/quality/{ProductionID}";
            rr:termType rr:IRI 
        ]
    ].

#################################
# Machine to Production Relationship Mapping
#################################

<#MachineProductionRelationship>
    rr:logicalTable [ rr:tableName "Production" ];
    rr:subjectMap [
        rr:template "http://example.org/machine/{MachineID}";
    ];
    
    # hasProduction relationship
    rr:predicateObjectMap [
        rr:predicate mfg:hasProduction;
        rr:objectMap [ 
            rr:template "http://example.org/production/{ProductionID}";
            rr:termType rr:IRI 
        ]
    ].

#################################
# Extended Mappings for IoT Integration
# (These would map additional IoT sensor data tables)
#################################

# Example: If there was a sensor_data table
# <#SensorDataMapping>
#     rr:logicalTable [ rr:tableName "sensor_data" ];
#     rr:subjectMap [
#         rr:template "http://example.org/sensor/{sensor_id}_{timestamp}";
#         rr:class mfg:SensorReading;
#     ];
#     # Additional mappings would go here...

#################################
# Conditional Mappings
# Example: Map machines to different classes based on type
#################################

<#CNCMachineMapping>
    rr:logicalTable [ 
        rr:sqlQuery """
            SELECT * FROM Machine 
            WHERE Type LIKE '%CNC%' OR Type LIKE '%Mill%'
        """
    ];
    rr:subjectMap [
        rr:template "http://example.org/machine/{MachineID}";
        rr:class mfg:CNCMachine;  # Specialized subclass
    ];
    
    # Inherit all properties from base MachineMapping
    # Additional CNC-specific properties could be added here
    .

#################################
# Aggregate Mappings
# Example: Calculate efficiency metrics
#################################

<#MachineEfficiencyMapping>
    rr:logicalTable [ 
        rr:sqlQuery """
            SELECT 
                m.MachineID,
                m.Type,
                m.Location,
                AVG(p.Quality_Score) as avg_quality,
                COUNT(p.ProductionID) as total_productions,
                SUM(p.Output_Quantity) as total_output
            FROM Machine m
            LEFT JOIN Production p ON m.MachineID = p.MachineID
            GROUP BY m.MachineID, m.Type, m.Location
        """
    ];
    rr:subjectMap [
        rr:template "http://example.org/machine/{MachineID}";
    ];
    
    # Average quality score as efficiency metric
    rr:predicateObjectMap [
        rr:predicate mfg:efficiency;
        rr:objectMap [ rr:column "avg_quality"; rr:datatype xsd:decimal ]
    ];
    
    # Total production count
    rr:predicateObjectMap [
        rr:predicate ex:totalProductions;
        rr:objectMap [ rr:column "total_productions"; rr:datatype xsd:integer ]
    ];
    
    # Total output quantity
    rr:predicateObjectMap [
        rr:predicate ex:totalOutput;
        rr:objectMap [ rr:column "total_output"; rr:datatype xsd:integer ]
    ].
